-- Vision UI Lib v2 (Mobile Compatible)
-- Original by Loco_CTO, Sius, BruhOOFBoi | Touch compatibility and resizing added

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local ThemeColor = {
	Main = Color3.fromRGB(32, 32, 32),
	Secondary = Color3.fromRGB(24, 24, 24),
	Tertiary = Color3.fromRGB(18, 18, 18),
	Text = Color3.fromRGB(255, 255, 255),
	PlaceholderText = Color3.fromRGB(175, 175, 175),
	Textbox = Color3.fromRGB(45, 45, 45),
	NavBar = Color3.fromRGB(35, 35, 35),
	Theme = Color3.fromRGB(132, 65, 232),
}

local Library = {
	Loaded = false,
	MainFrameHover = false,
	Sliding = false,
	CurrentTheme = ThemeColor,
}

getgenv().VisionUILibrary = Library

local LibSettings = {
	DragSpeed = 0.07,
	SoundVolume = 0.5,
}

function Library:PlaceDefaults(defaults, options)
	defaults = defaults or {}
	options = options or {}
	for option, value in next, options do
		defaults[option] = value
	end
	return defaults
end

function Library:Tween(object, options, callback)
	local info = TweenInfo.new(
		options.Length or 0.3,
		options.Style or Enum.EasingStyle.Quad,
		options.Direction or Enum.EasingDirection.Out
	)
	local tween = TweenService:Create(object, info, options.Goal)
	tween:Play()
	if callback then
		tween.Completed:Connect(callback)
	end
	return tween
end
function Library:Create(options)
	options = Library:PlaceDefaults({
		Name = "Vision UI Lib v2",
		Footer = "By Loco_CTO, Sius and BruhOOFBoi",
		ToggleKey = Enum.KeyCode.RightShift,
	}, options)

	local Gui = {}
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "VisionUILib"
	ScreenGui.Parent = game:GetService("CoreGui")
	ScreenGui.ResetOnSpawn = false
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Size = UDim2.new(0, 400, 0, 420)
	MainFrame.Position = UDim2.new(0.5, -200, 0.5, -210)
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BackgroundColor3 = ThemeColor.Main
	MainFrame.BorderSizePixel = 0
	MainFrame.Parent = ScreenGui

	local UIScale = Instance.new("UIScale", MainFrame)
	UIScale.Scale = 1

	local Title = Instance.new("TextLabel")
	Title.Size = UDim2.new(1, 0, 0, 30)
	Title.Position = UDim2.new(0, 0, 0, 0)
	Title.BackgroundTransparency = 1
	Title.Text = options.Name
	Title.Font = Enum.Font.GothamBold
	Title.TextColor3 = ThemeColor.Text
	Title.TextSize = 18
	Title.Parent = MainFrame

	local dragging = false
	local dragInput, dragStart, startPos

	MainFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = MainFrame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	MainFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	RunService.Heartbeat:Connect(function()
		if dragging and dragInput then
			local delta = dragInput.Position - dragStart
			MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	Gui.ScreenGui = ScreenGui
	Gui.MainFrame = MainFrame
	Gui.Title = Title

	return Gui
end

function Library:AddSection(gui, title)
	local section = Instance.new("Frame")
	section.Size = UDim2.new(1, -20, 0, 0)
	section.Position = UDim2.new(0, 10, 0, 40)
	section.BackgroundTransparency = 1
	section.AutomaticSize = Enum.AutomaticSize.Y
	section.Parent = gui.MainFrame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 6)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = section

	return section
end

function Library:AddButton(parent, text, callback)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 0, 30)
	button.BackgroundColor3 = ThemeColor.Tertiary
	button.Text = text
	button.TextColor3 = ThemeColor.Text
	button.Font = Enum.Font.Gotham
	button.TextSize = 14
	button.AutoButtonColor = true
	button.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 4)
	corner.Parent = button

	button.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			if callback then callback() end
		end
	end)
end

function Library:AddToggle(parent, text, default, callback)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, 0, 0, 30)
	frame.BackgroundTransparency = 1
	frame.Parent = parent

	local label = Instance.new("TextLabel")
	label.Text = text
	label.Size = UDim2.new(1, -40, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = ThemeColor.Text
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Size = UDim2.new(0, 28, 0, 28)
	toggleBtn.Position = UDim2.new(1, -28, 0.5, -14)
	toggleBtn.BackgroundColor3 = ThemeColor.Textbox
	toggleBtn.Text = ""
	toggleBtn.Parent = frame

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 4)
	corner.Parent = toggleBtn

	local toggled = default or false

	local function updateColor()
		toggleBtn.BackgroundColor3 = toggled and ThemeColor.Theme or ThemeColor.Textbox
	end

	toggleBtn.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			toggled = not toggled
			updateColor()
			if callback then callback(toggled) end
		end
	end)

	updateColor()
end

function Library:AddSlider(parent, text, min, max, default, callback)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, 0, 0, 40)
	frame.BackgroundTransparency = 1
	frame.Parent = parent

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 0, 20)
	label.Text = text .. ": " .. tostring(default)
	label.BackgroundTransparency = 1
	label.TextColor3 = ThemeColor.Text
	label.Font = Enum.Font.Gotham
	label.TextSize = 13
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = frame

	local sliderBar = Instance.new("Frame")
	sliderBar.Size = UDim2.new(1, 0, 0, 14)
	sliderBar.Position = UDim2.new(0, 0, 1, -14)
	sliderBar.BackgroundColor3 = ThemeColor.Textbox
	sliderBar.Parent = frame

	local fill = Instance.new("Frame")
	fill.BackgroundColor3 = ThemeColor.Theme
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.Parent = sliderBar

	local dragging = false

	local function setFromPos(x)
		local percent = math.clamp((x - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
		local value = math.floor((min + (max - min) * percent) + 0.5)
		fill.Size = UDim2.new(percent, 0, 1, 0)
		label.Text = text .. ": " .. tostring(value)
		if callback then callback(value) end
	end

	sliderBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			setFromPos(input.Position.X)
		end
	end)

	sliderBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
			setFromPos(input.Position.X)
		end
	end)
end

function Library:AddTextbox(parent, text, placeholder, callback)
	local box = Instance.new("TextBox")
	box.Size = UDim2.new(1, 0, 0, 30)
	box.PlaceholderText = placeholder or "Enter text..."
	box.Text = ""
	box.BackgroundColor3 = ThemeColor.Textbox
	box.TextColor3 = ThemeColor.Text
	box.TextSize = 13
	box.Font = Enum.Font.Gotham
	box.ClearTextOnFocus = false
	box.Parent = parent

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 0, 15)
	label.Text = text
	label.BackgroundTransparency = 1
	label.TextColor3 = ThemeColor.Text
	label.Font = Enum.Font.Gotham
	label.TextSize = 12
	label.Parent = parent

	box.FocusLost:Connect(function()
		if callback then
			callback(box.Text)
		end
	end)
end

return Library


